/* Auxiliary */
let parseFloat = function(string) {_top.parseFloat(string)}

/* Get arguments */
let trust = parseFloat(argv.trust)
if (trust === undefined) {
  error("Please specify previous trust using --trust <trustValueBetween0and1> command line")
}

let transfer = parseFloat(argv.transfer)
if (transfer === undefined) {
  error("Please specify previous trust using --transfer <transfer> command line")
}

let maxPossibleTransfer = parseFloat(argv.maxPossibleTransfer)
if (maxPossibleTransfer === undefined) {
  error("Please specify previous maxPossibleTransfer using --maxPossibleTransfer <maxPossibleTransfer> command line")
}
console.assert(trust >= 0 && trust <= 1)
console.assert(transfer >= 0 && transfer <= maxPossibleTransfer)

/** The algortihm */
let updateTrust = function(trust, transfer, maxPossibleTransfer) {
  let transferRatio = transfer / maxPossibleTransfer
  if (transferRatio > trust) {
    let trustIncreaseRatio = (transferRatio - trust) / (1 - trust)
    let lowRange = Math.log(trust) + 1
    let x = lowRange * (1 - trustIncreaseRatio) + trust * trustIncreaseRatio
    let result = Math.exp(x-1)
    console.assert(result >= trust && result <= Math.exp(trust - 1))
    return result
  } else {
    let trustDecreaseRatio = (trust - transferRatio) / trust
    let hiRange = Math.exp(trust) - 1
    let x = hiRange * (1 - trustDecreaseRatio) + trust * trustDecreaseRatio
    let result = Math.log(x+1)
    console.assert(result <= trust && result >= Math.log(trust + 1))
    return result
  }
}

let updatedTrust = updateTrust(trust, transfer, maxPossibleTransfer)
display("Previous trust: " + trust)
display("Transfer: " + transfer)
display("Max possible transfer: " + maxPossibleTransfer)
display("New trust: " + updatedTrust)
