/* Setup game structure */
let options = {
    horizon: 6,
    beliefRepresentation: 'dirichlet'
}

let gameSpecificParams = {
    tippingNorm: 20,
    gaspScores: [0,5]
}

let getScenarios = function() {
    /**
     basic scenario for now
     */
    let getScenario1 = function() {
        let name = "basic"
        let benParams = {
            goalCoeffs: [1],
            metaParams: {
                alpha: 100,
                discountFactor: 0.9,
                lookAhead: 2
            }
        }
        let benInitialState = {
            belief: [undefined, [2,2]],
            mentalEstimations: [undefined, [Delta({v: 0.7})]], // an array of mental estimations (where each estimation is a distribution)
            metaParamsEstimations: {
                alpha: [undefined, Categorical({vs: [100]})],
                lookAhead: [undefined, Categorical({vs: [2]})],
                discountFactor: [undefined, Categorical({vs: [0.8]})]
            }
        }
        let ben = {
            params: benParams,
            initialState: benInitialState
        }
        let abiParams = {
            goalCoeffs: [0.4, 0.6],
            metaParams: {
                alpha: 10,
                discountFactor: 0.8,
                lookAhead: 1
            }
        }
        let abiInitialState = {
            belief: [[1], undefined],
            mentalEstimations: [[Delta({v: "irrelevant"})], undefined], // an array of mental estimations (where each estimation is a distribution)
            metaParamsEstimations: {
                alpha: [Categorical({vs: [100]}), undefined],
                lookAhead: [Categorical({vs: [2]}), undefined],
                discountFactor: [Categorical({vs: [0.8]}), undefined]
            }
        }
        let abi = {
            params: abiParams,
            initialState: abiInitialState
        }
        let agents = [ben, abi]
        return {name, agents, options, gameSpecificParams}
    }

    return [getScenario1()]
}

let printGuilt = function(game, agents, state, names) {
    let turn = game.API.turn
    if (turn(state) === 0) {
        let tipper = agents[1]
        let mentalState = tipper.mentalState
        let guilt = mentalState(state)[0]
        let stateToString = game.API.stateToString
        display(names[1] + "'s guilt at state " + stateToString(state) + ": " + guilt)
    }
}

let callbacks = {
    periodic: printGuilt
}

let scenarios = getScenarios()
simulateScenarios(scenarios, makeTippingCSMG, ['ben', 'abi'], callbacks)